// <auto-generated/>
// Generated Query protocol handler for Sns

using Amazon.SimpleNotificationService;
using Amazon.SimpleNotificationService.Model;

namespace LocalSqsSnsMessaging.Http.Handlers;

/// <summary>
/// Handles Sns operations using Query protocol with generated serializers.
/// </summary>
internal static partial class SnsOperationHandler
{
    public static async Task<(object Response, string OperationName)> HandleAsync(
        AwsRequestContext context,
        InMemoryAwsBus bus,
        CancellationToken cancellationToken)
    {
        ArgumentNullException.ThrowIfNull(context);
        ArgumentNullException.ThrowIfNull(bus);

        using IAmazonSimpleNotificationService client = bus.CreateSnsClient();

        return context.OperationName switch
        {
            "AddPermission" => await HandleAddPermissionAsync(context, client, cancellationToken),
            "CheckIfPhoneNumberIsOptedOut" => await HandleCheckIfPhoneNumberIsOptedOutAsync(context, client, cancellationToken),
            "ConfirmSubscription" => await HandleConfirmSubscriptionAsync(context, client, cancellationToken),
            "CreatePlatformApplication" => await HandleCreatePlatformApplicationAsync(context, client, cancellationToken),
            "CreatePlatformEndpoint" => await HandleCreatePlatformEndpointAsync(context, client, cancellationToken),
            "CreateSMSSandboxPhoneNumber" => await HandleCreateSMSSandboxPhoneNumberAsync(context, client, cancellationToken),
            "CreateTopic" => await HandleCreateTopicAsync(context, client, cancellationToken),
            "DeleteEndpoint" => await HandleDeleteEndpointAsync(context, client, cancellationToken),
            "DeletePlatformApplication" => await HandleDeletePlatformApplicationAsync(context, client, cancellationToken),
            "DeleteSMSSandboxPhoneNumber" => await HandleDeleteSMSSandboxPhoneNumberAsync(context, client, cancellationToken),
            "DeleteTopic" => await HandleDeleteTopicAsync(context, client, cancellationToken),
            "GetDataProtectionPolicy" => await HandleGetDataProtectionPolicyAsync(context, client, cancellationToken),
            "GetEndpointAttributes" => await HandleGetEndpointAttributesAsync(context, client, cancellationToken),
            "GetPlatformApplicationAttributes" => await HandleGetPlatformApplicationAttributesAsync(context, client, cancellationToken),
            "GetSMSAttributes" => await HandleGetSMSAttributesAsync(context, client, cancellationToken),
            "GetSMSSandboxAccountStatus" => await HandleGetSMSSandboxAccountStatusAsync(context, client, cancellationToken),
            "GetSubscriptionAttributes" => await HandleGetSubscriptionAttributesAsync(context, client, cancellationToken),
            "GetTopicAttributes" => await HandleGetTopicAttributesAsync(context, client, cancellationToken),
            "ListEndpointsByPlatformApplication" => await HandleListEndpointsByPlatformApplicationAsync(context, client, cancellationToken),
            "ListOriginationNumbers" => await HandleListOriginationNumbersAsync(context, client, cancellationToken),
            "ListPhoneNumbersOptedOut" => await HandleListPhoneNumbersOptedOutAsync(context, client, cancellationToken),
            "ListPlatformApplications" => await HandleListPlatformApplicationsAsync(context, client, cancellationToken),
            "ListSMSSandboxPhoneNumbers" => await HandleListSMSSandboxPhoneNumbersAsync(context, client, cancellationToken),
            "ListSubscriptions" => await HandleListSubscriptionsAsync(context, client, cancellationToken),
            "ListSubscriptionsByTopic" => await HandleListSubscriptionsByTopicAsync(context, client, cancellationToken),
            "ListTagsForResource" => await HandleListTagsForResourceAsync(context, client, cancellationToken),
            "ListTopics" => await HandleListTopicsAsync(context, client, cancellationToken),
            "OptInPhoneNumber" => await HandleOptInPhoneNumberAsync(context, client, cancellationToken),
            "Publish" => await HandlePublishAsync(context, client, cancellationToken),
            "PublishBatch" => await HandlePublishBatchAsync(context, client, cancellationToken),
            "PutDataProtectionPolicy" => await HandlePutDataProtectionPolicyAsync(context, client, cancellationToken),
            "RemovePermission" => await HandleRemovePermissionAsync(context, client, cancellationToken),
            "SetEndpointAttributes" => await HandleSetEndpointAttributesAsync(context, client, cancellationToken),
            "SetPlatformApplicationAttributes" => await HandleSetPlatformApplicationAttributesAsync(context, client, cancellationToken),
            "SetSMSAttributes" => await HandleSetSMSAttributesAsync(context, client, cancellationToken),
            "SetSubscriptionAttributes" => await HandleSetSubscriptionAttributesAsync(context, client, cancellationToken),
            "SetTopicAttributes" => await HandleSetTopicAttributesAsync(context, client, cancellationToken),
            "Subscribe" => await HandleSubscribeAsync(context, client, cancellationToken),
            "TagResource" => await HandleTagResourceAsync(context, client, cancellationToken),
            "Unsubscribe" => await HandleUnsubscribeAsync(context, client, cancellationToken),
            "UntagResource" => await HandleUntagResourceAsync(context, client, cancellationToken),
            "VerifySMSSandboxPhoneNumber" => await HandleVerifySMSSandboxPhoneNumberAsync(context, client, cancellationToken),
            _ => throw new NotSupportedException($"Sns operation '{context.OperationName}' is not supported.")
        };
    }

    private static async Task<(object, string)> HandleAddPermissionAsync(
        AwsRequestContext context,
        IAmazonSimpleNotificationService client,
        CancellationToken cancellationToken)
    {
        var request = SnsQuerySerializers.DeserializeAddPermissionRequest(context.RequestBody);
        var response = await client.AddPermissionAsync(request, cancellationToken).ConfigureAwait(false);
        return (response, "AddPermission");
    }

    private static async Task<(object, string)> HandleCheckIfPhoneNumberIsOptedOutAsync(
        AwsRequestContext context,
        IAmazonSimpleNotificationService client,
        CancellationToken cancellationToken)
    {
        var request = SnsQuerySerializers.DeserializeCheckIfPhoneNumberIsOptedOutRequest(context.RequestBody);
        var response = await client.CheckIfPhoneNumberIsOptedOutAsync(request, cancellationToken).ConfigureAwait(false);
        return (response, "CheckIfPhoneNumberIsOptedOut");
    }

    private static async Task<(object, string)> HandleConfirmSubscriptionAsync(
        AwsRequestContext context,
        IAmazonSimpleNotificationService client,
        CancellationToken cancellationToken)
    {
        var request = SnsQuerySerializers.DeserializeConfirmSubscriptionRequest(context.RequestBody);
        var response = await client.ConfirmSubscriptionAsync(request, cancellationToken).ConfigureAwait(false);
        return (response, "ConfirmSubscription");
    }

    private static async Task<(object, string)> HandleCreatePlatformApplicationAsync(
        AwsRequestContext context,
        IAmazonSimpleNotificationService client,
        CancellationToken cancellationToken)
    {
        var request = SnsQuerySerializers.DeserializeCreatePlatformApplicationRequest(context.RequestBody);
        var response = await client.CreatePlatformApplicationAsync(request, cancellationToken).ConfigureAwait(false);
        return (response, "CreatePlatformApplication");
    }

    private static async Task<(object, string)> HandleCreatePlatformEndpointAsync(
        AwsRequestContext context,
        IAmazonSimpleNotificationService client,
        CancellationToken cancellationToken)
    {
        var request = SnsQuerySerializers.DeserializeCreatePlatformEndpointRequest(context.RequestBody);
        var response = await client.CreatePlatformEndpointAsync(request, cancellationToken).ConfigureAwait(false);
        return (response, "CreatePlatformEndpoint");
    }

    private static async Task<(object, string)> HandleCreateSMSSandboxPhoneNumberAsync(
        AwsRequestContext context,
        IAmazonSimpleNotificationService client,
        CancellationToken cancellationToken)
    {
        var request = SnsQuerySerializers.DeserializeCreateSMSSandboxPhoneNumberRequest(context.RequestBody);
        var response = await client.CreateSMSSandboxPhoneNumberAsync(request, cancellationToken).ConfigureAwait(false);
        return (response, "CreateSMSSandboxPhoneNumber");
    }

    private static async Task<(object, string)> HandleCreateTopicAsync(
        AwsRequestContext context,
        IAmazonSimpleNotificationService client,
        CancellationToken cancellationToken)
    {
        var request = SnsQuerySerializers.DeserializeCreateTopicRequest(context.RequestBody);
        var response = await client.CreateTopicAsync(request, cancellationToken).ConfigureAwait(false);
        return (response, "CreateTopic");
    }

    private static async Task<(object, string)> HandleDeleteEndpointAsync(
        AwsRequestContext context,
        IAmazonSimpleNotificationService client,
        CancellationToken cancellationToken)
    {
        var request = SnsQuerySerializers.DeserializeDeleteEndpointRequest(context.RequestBody);
        var response = await client.DeleteEndpointAsync(request, cancellationToken).ConfigureAwait(false);
        return (response, "DeleteEndpoint");
    }

    private static async Task<(object, string)> HandleDeletePlatformApplicationAsync(
        AwsRequestContext context,
        IAmazonSimpleNotificationService client,
        CancellationToken cancellationToken)
    {
        var request = SnsQuerySerializers.DeserializeDeletePlatformApplicationRequest(context.RequestBody);
        var response = await client.DeletePlatformApplicationAsync(request, cancellationToken).ConfigureAwait(false);
        return (response, "DeletePlatformApplication");
    }

    private static async Task<(object, string)> HandleDeleteSMSSandboxPhoneNumberAsync(
        AwsRequestContext context,
        IAmazonSimpleNotificationService client,
        CancellationToken cancellationToken)
    {
        var request = SnsQuerySerializers.DeserializeDeleteSMSSandboxPhoneNumberRequest(context.RequestBody);
        var response = await client.DeleteSMSSandboxPhoneNumberAsync(request, cancellationToken).ConfigureAwait(false);
        return (response, "DeleteSMSSandboxPhoneNumber");
    }

    private static async Task<(object, string)> HandleDeleteTopicAsync(
        AwsRequestContext context,
        IAmazonSimpleNotificationService client,
        CancellationToken cancellationToken)
    {
        var request = SnsQuerySerializers.DeserializeDeleteTopicRequest(context.RequestBody);
        var response = await client.DeleteTopicAsync(request, cancellationToken).ConfigureAwait(false);
        return (response, "DeleteTopic");
    }

    private static async Task<(object, string)> HandleGetDataProtectionPolicyAsync(
        AwsRequestContext context,
        IAmazonSimpleNotificationService client,
        CancellationToken cancellationToken)
    {
        var request = SnsQuerySerializers.DeserializeGetDataProtectionPolicyRequest(context.RequestBody);
        var response = await client.GetDataProtectionPolicyAsync(request, cancellationToken).ConfigureAwait(false);
        return (response, "GetDataProtectionPolicy");
    }

    private static async Task<(object, string)> HandleGetEndpointAttributesAsync(
        AwsRequestContext context,
        IAmazonSimpleNotificationService client,
        CancellationToken cancellationToken)
    {
        var request = SnsQuerySerializers.DeserializeGetEndpointAttributesRequest(context.RequestBody);
        var response = await client.GetEndpointAttributesAsync(request, cancellationToken).ConfigureAwait(false);
        return (response, "GetEndpointAttributes");
    }

    private static async Task<(object, string)> HandleGetPlatformApplicationAttributesAsync(
        AwsRequestContext context,
        IAmazonSimpleNotificationService client,
        CancellationToken cancellationToken)
    {
        var request = SnsQuerySerializers.DeserializeGetPlatformApplicationAttributesRequest(context.RequestBody);
        var response = await client.GetPlatformApplicationAttributesAsync(request, cancellationToken).ConfigureAwait(false);
        return (response, "GetPlatformApplicationAttributes");
    }

    private static async Task<(object, string)> HandleGetSMSAttributesAsync(
        AwsRequestContext context,
        IAmazonSimpleNotificationService client,
        CancellationToken cancellationToken)
    {
        var request = SnsQuerySerializers.DeserializeGetSMSAttributesRequest(context.RequestBody);
        var response = await client.GetSMSAttributesAsync(request, cancellationToken).ConfigureAwait(false);
        return (response, "GetSMSAttributes");
    }

    private static async Task<(object, string)> HandleGetSMSSandboxAccountStatusAsync(
        AwsRequestContext context,
        IAmazonSimpleNotificationService client,
        CancellationToken cancellationToken)
    {
        var request = SnsQuerySerializers.DeserializeGetSMSSandboxAccountStatusRequest(context.RequestBody);
        var response = await client.GetSMSSandboxAccountStatusAsync(request, cancellationToken).ConfigureAwait(false);
        return (response, "GetSMSSandboxAccountStatus");
    }

    private static async Task<(object, string)> HandleGetSubscriptionAttributesAsync(
        AwsRequestContext context,
        IAmazonSimpleNotificationService client,
        CancellationToken cancellationToken)
    {
        var request = SnsQuerySerializers.DeserializeGetSubscriptionAttributesRequest(context.RequestBody);
        var response = await client.GetSubscriptionAttributesAsync(request, cancellationToken).ConfigureAwait(false);
        return (response, "GetSubscriptionAttributes");
    }

    private static async Task<(object, string)> HandleGetTopicAttributesAsync(
        AwsRequestContext context,
        IAmazonSimpleNotificationService client,
        CancellationToken cancellationToken)
    {
        var request = SnsQuerySerializers.DeserializeGetTopicAttributesRequest(context.RequestBody);
        var response = await client.GetTopicAttributesAsync(request, cancellationToken).ConfigureAwait(false);
        return (response, "GetTopicAttributes");
    }

    private static async Task<(object, string)> HandleListEndpointsByPlatformApplicationAsync(
        AwsRequestContext context,
        IAmazonSimpleNotificationService client,
        CancellationToken cancellationToken)
    {
        var request = SnsQuerySerializers.DeserializeListEndpointsByPlatformApplicationRequest(context.RequestBody);
        var response = await client.ListEndpointsByPlatformApplicationAsync(request, cancellationToken).ConfigureAwait(false);
        return (response, "ListEndpointsByPlatformApplication");
    }

    private static async Task<(object, string)> HandleListOriginationNumbersAsync(
        AwsRequestContext context,
        IAmazonSimpleNotificationService client,
        CancellationToken cancellationToken)
    {
        var request = SnsQuerySerializers.DeserializeListOriginationNumbersRequest(context.RequestBody);
        var response = await client.ListOriginationNumbersAsync(request, cancellationToken).ConfigureAwait(false);
        return (response, "ListOriginationNumbers");
    }

    private static async Task<(object, string)> HandleListPhoneNumbersOptedOutAsync(
        AwsRequestContext context,
        IAmazonSimpleNotificationService client,
        CancellationToken cancellationToken)
    {
        var request = SnsQuerySerializers.DeserializeListPhoneNumbersOptedOutRequest(context.RequestBody);
        var response = await client.ListPhoneNumbersOptedOutAsync(request, cancellationToken).ConfigureAwait(false);
        return (response, "ListPhoneNumbersOptedOut");
    }

    private static async Task<(object, string)> HandleListPlatformApplicationsAsync(
        AwsRequestContext context,
        IAmazonSimpleNotificationService client,
        CancellationToken cancellationToken)
    {
        var request = SnsQuerySerializers.DeserializeListPlatformApplicationsRequest(context.RequestBody);
        var response = await client.ListPlatformApplicationsAsync(request, cancellationToken).ConfigureAwait(false);
        return (response, "ListPlatformApplications");
    }

    private static async Task<(object, string)> HandleListSMSSandboxPhoneNumbersAsync(
        AwsRequestContext context,
        IAmazonSimpleNotificationService client,
        CancellationToken cancellationToken)
    {
        var request = SnsQuerySerializers.DeserializeListSMSSandboxPhoneNumbersRequest(context.RequestBody);
        var response = await client.ListSMSSandboxPhoneNumbersAsync(request, cancellationToken).ConfigureAwait(false);
        return (response, "ListSMSSandboxPhoneNumbers");
    }

    private static async Task<(object, string)> HandleListSubscriptionsAsync(
        AwsRequestContext context,
        IAmazonSimpleNotificationService client,
        CancellationToken cancellationToken)
    {
        var request = SnsQuerySerializers.DeserializeListSubscriptionsRequest(context.RequestBody);
        var response = await client.ListSubscriptionsAsync(request, cancellationToken).ConfigureAwait(false);
        return (response, "ListSubscriptions");
    }

    private static async Task<(object, string)> HandleListSubscriptionsByTopicAsync(
        AwsRequestContext context,
        IAmazonSimpleNotificationService client,
        CancellationToken cancellationToken)
    {
        var request = SnsQuerySerializers.DeserializeListSubscriptionsByTopicRequest(context.RequestBody);
        var response = await client.ListSubscriptionsByTopicAsync(request, cancellationToken).ConfigureAwait(false);
        return (response, "ListSubscriptionsByTopic");
    }

    private static async Task<(object, string)> HandleListTagsForResourceAsync(
        AwsRequestContext context,
        IAmazonSimpleNotificationService client,
        CancellationToken cancellationToken)
    {
        var request = SnsQuerySerializers.DeserializeListTagsForResourceRequest(context.RequestBody);
        var response = await client.ListTagsForResourceAsync(request, cancellationToken).ConfigureAwait(false);
        return (response, "ListTagsForResource");
    }

    private static async Task<(object, string)> HandleListTopicsAsync(
        AwsRequestContext context,
        IAmazonSimpleNotificationService client,
        CancellationToken cancellationToken)
    {
        var request = SnsQuerySerializers.DeserializeListTopicsRequest(context.RequestBody);
        var response = await client.ListTopicsAsync(request, cancellationToken).ConfigureAwait(false);
        return (response, "ListTopics");
    }

    private static async Task<(object, string)> HandleOptInPhoneNumberAsync(
        AwsRequestContext context,
        IAmazonSimpleNotificationService client,
        CancellationToken cancellationToken)
    {
        var request = SnsQuerySerializers.DeserializeOptInPhoneNumberRequest(context.RequestBody);
        var response = await client.OptInPhoneNumberAsync(request, cancellationToken).ConfigureAwait(false);
        return (response, "OptInPhoneNumber");
    }

    private static async Task<(object, string)> HandlePublishAsync(
        AwsRequestContext context,
        IAmazonSimpleNotificationService client,
        CancellationToken cancellationToken)
    {
        var request = SnsQuerySerializers.DeserializePublishRequest(context.RequestBody);
        var response = await client.PublishAsync(request, cancellationToken).ConfigureAwait(false);
        return (response, "Publish");
    }

    private static async Task<(object, string)> HandlePublishBatchAsync(
        AwsRequestContext context,
        IAmazonSimpleNotificationService client,
        CancellationToken cancellationToken)
    {
        var request = SnsQuerySerializers.DeserializePublishBatchRequest(context.RequestBody);
        var response = await client.PublishBatchAsync(request, cancellationToken).ConfigureAwait(false);
        return (response, "PublishBatch");
    }

    private static async Task<(object, string)> HandlePutDataProtectionPolicyAsync(
        AwsRequestContext context,
        IAmazonSimpleNotificationService client,
        CancellationToken cancellationToken)
    {
        var request = SnsQuerySerializers.DeserializePutDataProtectionPolicyRequest(context.RequestBody);
        var response = await client.PutDataProtectionPolicyAsync(request, cancellationToken).ConfigureAwait(false);
        return (response, "PutDataProtectionPolicy");
    }

    private static async Task<(object, string)> HandleRemovePermissionAsync(
        AwsRequestContext context,
        IAmazonSimpleNotificationService client,
        CancellationToken cancellationToken)
    {
        var request = SnsQuerySerializers.DeserializeRemovePermissionRequest(context.RequestBody);
        var response = await client.RemovePermissionAsync(request, cancellationToken).ConfigureAwait(false);
        return (response, "RemovePermission");
    }

    private static async Task<(object, string)> HandleSetEndpointAttributesAsync(
        AwsRequestContext context,
        IAmazonSimpleNotificationService client,
        CancellationToken cancellationToken)
    {
        var request = SnsQuerySerializers.DeserializeSetEndpointAttributesRequest(context.RequestBody);
        var response = await client.SetEndpointAttributesAsync(request, cancellationToken).ConfigureAwait(false);
        return (response, "SetEndpointAttributes");
    }

    private static async Task<(object, string)> HandleSetPlatformApplicationAttributesAsync(
        AwsRequestContext context,
        IAmazonSimpleNotificationService client,
        CancellationToken cancellationToken)
    {
        var request = SnsQuerySerializers.DeserializeSetPlatformApplicationAttributesRequest(context.RequestBody);
        var response = await client.SetPlatformApplicationAttributesAsync(request, cancellationToken).ConfigureAwait(false);
        return (response, "SetPlatformApplicationAttributes");
    }

    private static async Task<(object, string)> HandleSetSMSAttributesAsync(
        AwsRequestContext context,
        IAmazonSimpleNotificationService client,
        CancellationToken cancellationToken)
    {
        var request = SnsQuerySerializers.DeserializeSetSMSAttributesRequest(context.RequestBody);
        var response = await client.SetSMSAttributesAsync(request, cancellationToken).ConfigureAwait(false);
        return (response, "SetSMSAttributes");
    }

    private static async Task<(object, string)> HandleSetSubscriptionAttributesAsync(
        AwsRequestContext context,
        IAmazonSimpleNotificationService client,
        CancellationToken cancellationToken)
    {
        var request = SnsQuerySerializers.DeserializeSetSubscriptionAttributesRequest(context.RequestBody);
        var response = await client.SetSubscriptionAttributesAsync(request, cancellationToken).ConfigureAwait(false);
        return (response, "SetSubscriptionAttributes");
    }

    private static async Task<(object, string)> HandleSetTopicAttributesAsync(
        AwsRequestContext context,
        IAmazonSimpleNotificationService client,
        CancellationToken cancellationToken)
    {
        var request = SnsQuerySerializers.DeserializeSetTopicAttributesRequest(context.RequestBody);
        var response = await client.SetTopicAttributesAsync(request, cancellationToken).ConfigureAwait(false);
        return (response, "SetTopicAttributes");
    }

    private static async Task<(object, string)> HandleSubscribeAsync(
        AwsRequestContext context,
        IAmazonSimpleNotificationService client,
        CancellationToken cancellationToken)
    {
        var request = SnsQuerySerializers.DeserializeSubscribeRequest(context.RequestBody);
        var response = await client.SubscribeAsync(request, cancellationToken).ConfigureAwait(false);
        return (response, "Subscribe");
    }

    private static async Task<(object, string)> HandleTagResourceAsync(
        AwsRequestContext context,
        IAmazonSimpleNotificationService client,
        CancellationToken cancellationToken)
    {
        var request = SnsQuerySerializers.DeserializeTagResourceRequest(context.RequestBody);
        var response = await client.TagResourceAsync(request, cancellationToken).ConfigureAwait(false);
        return (response, "TagResource");
    }

    private static async Task<(object, string)> HandleUnsubscribeAsync(
        AwsRequestContext context,
        IAmazonSimpleNotificationService client,
        CancellationToken cancellationToken)
    {
        var request = SnsQuerySerializers.DeserializeUnsubscribeRequest(context.RequestBody);
        var response = await client.UnsubscribeAsync(request, cancellationToken).ConfigureAwait(false);
        return (response, "Unsubscribe");
    }

    private static async Task<(object, string)> HandleUntagResourceAsync(
        AwsRequestContext context,
        IAmazonSimpleNotificationService client,
        CancellationToken cancellationToken)
    {
        var request = SnsQuerySerializers.DeserializeUntagResourceRequest(context.RequestBody);
        var response = await client.UntagResourceAsync(request, cancellationToken).ConfigureAwait(false);
        return (response, "UntagResource");
    }

    private static async Task<(object, string)> HandleVerifySMSSandboxPhoneNumberAsync(
        AwsRequestContext context,
        IAmazonSimpleNotificationService client,
        CancellationToken cancellationToken)
    {
        var request = SnsQuerySerializers.DeserializeVerifySMSSandboxPhoneNumberRequest(context.RequestBody);
        var response = await client.VerifySMSSandboxPhoneNumberAsync(request, cancellationToken).ConfigureAwait(false);
        return (response, "VerifySMSSandboxPhoneNumber");
    }

}
